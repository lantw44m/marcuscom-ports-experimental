pthread_t can well be a 64-bit value -- on FreeBSD/amd64, for example.
Better to just keep calling it pthread_t isntead of casting to anything.

	-mi

--- ../pr/include/private/pprthred.h	Sun Apr 25 11:00:56 2004
+++ ../pr/include/private/pprthred.h	Tue Jul 12 00:52:42 2005
@@ -44,4 +44,5 @@
 */
 #include "nspr.h"
+#include <pthread.h>
 
 #if defined(XP_OS2)
@@ -92,5 +92,5 @@
 ** when it is created or attached.
 */
-NSPR_API(PRUint32) PR_GetThreadID(PRThread *thread);
+NSPR_API(pthread_t) PR_GetThreadID(PRThread *thread);
 
 /*
--- ../pr/src/pthreads/ptthread.c.orig	2007-07-05 08:21:07.000000000 -0400
+++ ../pr/src/pthreads/ptthread.c	2007-07-05 08:32:39.000000000 -0400
@@ -1059,12 +1059,12 @@
     _exit(status);
 }
 
-PR_IMPLEMENT(PRUint32) PR_GetThreadID(PRThread *thred)
+PR_IMPLEMENT(pthread_t) PR_GetThreadID(PRThread *thred)
 {
 #if defined(_PR_DCETHREADS)
     return (PRUint32)&thred->id;  /* this is really a sham! */
 #else
-    return (PRUint32)thred->id;  /* and I don't know what they will do with it */
+    return thred->id;  /* and I don't know what they will do with it */
 #endif
 }
 
@@ -1196,7 +1196,9 @@
     PRIntn count = 0;
     PRStatus rv = PR_SUCCESS;
     PRThread* thred = pt_book.first;
+#if !defined(_PR_DCETHREADS) && (defined(DEBUG) || defined(FORCE_PR_ASSERT))
     PRThread *me = PR_GetCurrentThread();
+#endif
 
     PR_LOG(_pr_gc_lm, PR_LOG_ALWAYS, ("Begin PR_EnumerateThreads\n"));
     /*
